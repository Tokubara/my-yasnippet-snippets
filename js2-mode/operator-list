# -*- mode: snippet -*-
# name: operator-list
# key: 
# --
++ // 既可以 pre, 又可以 post, 并且区别也和 c 完全一样
--
** // 和 python 一样, power


>> // sign extension
>>> // zero extension

==, !=// non-strct
===, !== // strict

^,&,|
~ // invert bits, 比如 1 inverse 后就是 -2(二补码)

&&, || // 短路运算符, any, any->any, 也是逻辑运算符
?? // 是段落运算符但不是逻辑运算符, a ?? b 如果 a not null 且 not undefined, 就返回 a, 与 ||, && 合用时要加括号 
! // invert boolean value, not

?:

, // 和 c 一样, 从左到右计算, 返回最右, 意义是 combines multiple expressions into a single expression
+=
-=
**=
>>>=
|= // 基本上都有

string in object // 判断 object 是否有 string 那个 property, in 左边其它操作数会被转换为 string, inherit 也算, [[id:F9BAD21C-FD6F-40AD-92E6-B2364478979A]]
a instanceof Array // 左边是一个 object, 右边是 class, 其实就是函数, 继承的也算, 比如 instanceof Object 必然返回 true

delete a.x // delete property
delete a[2]
typeof // 不是你想得那么有用, 取值如下, 返回是字符串, 可以看到多数 object 都直接得到 "object"
// undefined "undefined"
// null "object"
// true or false "boolean"
// any number or NaN "number"
// any BigInt "bigint"
// any string "string"
// any symbol "symbol"
// any function "function"
// any nonfunction object "object"
