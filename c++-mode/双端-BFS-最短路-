# -*- mode: snippet -*-
# name: 双端-BFS-最短路-
# key: 
# --
typedef pair<int, int> pp;

bool visit[SIZE];

    deque<pp> q;
    q.emplace_front(0, 0); // 点 id, 距离
    int target = r*(c+1)+c;
    bool has_sol = false;
    pp tmp;
    int tmp_v;
    while(q.size()) {
      tmp = q.front();
      q.pop_front();
      tmp_v = tmp.first;
      if(visit[tmp_v]) continue;
      /* printf("%d %d\n", tmp_v, tmp.second); */
      if(tmp_v == target) { // 得到 target 的最短路
        printf("%d\n", tmp.second);
        has_sol = true;
        break;
      }
      visit[tmp_v] = true;
      for(int i = 0; i < 4; i++) {
        int neighbor = tmp_v + direction[i]; // 扩展
        if( && !visit[neighbor]) { // 扩展条件
          if(edge[tmp_v][i]) { // 是 1
            q.emplace_back(neighbor, tmp.second+1);
          } else if(edge[tmp_v][i]==0) { // 是 0
            q.emplace_front(neighbor, tmp.second);
          } else {
            assert(false);
          }
        }
      }
    }
    assert(has_sol);
