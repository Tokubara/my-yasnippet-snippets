# -*- mode: snippet -*-
# name: integer-to-enum--2-
# key: 
# --
use int_enum::{IntEnum}; // 有 int_value, from_int 两个函数
// 不过本来 enum to integer 可以直接用 as
use enum_iterator::{all, Sequence}; // all() 可以获得所有 enum 取值 iterator

#[repr(u32)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, IntEnum, Sequence)]
pub enum ResistorColor {
    Black = 0,
    Brown = 1,
    Red = 2,
    Orange = 3,
    Yellow = 4,
    Green = 5,
    Blue = 6,
    Violet = 7,
    Grey = 8,
    White = 9
}

pub fn color_to_value(_color: ResistorColor) -> u32 {
    _color.int_value() 
}

pub fn value_to_color_string(value: u32) -> String {
    match ResistorColor::from_int(value) {
        Ok(v)=> format!("{:?}", v),
        Err(_)=> String::from("value out of range")
    }
}

pub fn colors() -> Vec<ResistorColor> {
    all::<ResistorColor>().collect() 
}
